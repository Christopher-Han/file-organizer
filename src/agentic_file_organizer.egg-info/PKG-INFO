Metadata-Version: 2.4
Name: agentic-file-organizer
Version: 0.1.0
Summary: MCP-powered agent that organizes files with safe staging and memory.
Author: Agentic Team
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: typer>=0.12
Requires-Dist: pydantic>=2.7
Requires-Dist: llama-api-client>=0.1.0
Provides-Extra: dev
Requires-Dist: pytest>=8.2; extra == "dev"

# Agentic File Organizer

This repository contains the implementation of an MCP-powered agent that organizes files safely and
intelligently. The project roadmap, including milestones and major tasks, is documented in
[`docs/PROJECT_PLAN.md`](docs/PROJECT_PLAN.md).

## Getting Started

The codebase targets Python 3.11+. To set up the project locally:

```bash
conda create -n organizer python=3.11
conda activate organizer
pip install -e .[dev]

# Store your Llama API key once; it will be reused for future runs
organizer configure-llm
```

The CLI persists the key to `.organizer/llama.api.key`, respecting the `LLAMA_API_KEY`
environment variable if you prefer to manage credentials that way.

Additional documentation for each milestone will be recorded in the `docs/` directory as the project
progresses. Current deep dives:

- [`docs/milestone-setup.md`](docs/milestone-setup.md) – environment scaffolding and path helpers.
- [`docs/milestone-mcp-server-foundations.md`](docs/milestone-mcp-server-foundations.md) – server routing scaffold, shared context, and storage adapters.
- [`docs/milestone-filesystem-scanning.md`](docs/milestone-filesystem-scanning.md) – filesystem scanning, indexing, and search tooling.
- [`docs/milestone-rule-engine.md`](docs/milestone-rule-engine.md) – rule DSL, suggestion engine, and
  safety tooling for staging, applying, and rolling back manifests.
- [`docs/milestone-memory-prompts.md`](docs/milestone-memory-prompts.md) – memory tools, adaptive
  prompts, and CLI polish for preference management.
